{
  "name": "shiftbalance",
  "version": "1.0.0",
  "private": true,
  "description": "Restaurant shift management system with intelligent scheduling",
  "workspaces": [
    "frontend",
    "backend",
    "shared"
  ],
  "scripts": {
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "dev:frontend": "npm run dev --workspace=frontend",
    "dev:backend": "npm run dev --workspace=backend",
    "build": "npm run build:shared && npm run build:backend && npm run build:frontend",
    "build:frontend": "npm run build --workspace=frontend",
    "build:backend": "npm run build --workspace=backend",
    "build:shared": "npm run build --workspace=shared",
    "test": "npm run test:backend && npm run test:frontend",
    "test:frontend": "npm run test --workspace=frontend",
    "test:backend": "npm run test --workspace=backend",
    "lint": "npm run lint:backend && npm run lint:frontend",
    "lint:frontend": "npm run lint --workspace=frontend",
    "lint:backend": "npm run lint --workspace=backend",
    "format": "prettier --write \"**/*.{js,jsx,ts,tsx,json,md}\"",
    "typecheck": "npm run typecheck:backend && npm run typecheck:frontend",
    "typecheck:frontend": "npm run typecheck --workspace=frontend",
    "typecheck:backend": "npm run typecheck --workspace=backend",
    "db:migrate": "npm run db:migrate --workspace=backend",
    "db:seed": "npm run db:seed --workspace=backend",
    "db:reset": "npm run db:reset --workspace=backend",
    "db:studio": "npm run db:studio --workspace=backend",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "install:all": "npm install",
    "clean": "rm -rf node_modules frontend/node_modules backend/node_modules shared/node_modules"
  },
  "devDependencies": {
    "concurrently": "^8.2.2",
    "prettier": "^3.2.5",
    "husky": "^9.0.11",
    "lint-staged": "^15.2.2"
  },
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=10.0.0"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,css}": [
      "prettier --write"
    ]
  }
}